CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];
    PARTS:
    Not(in=sel, out=notsel);
    And(a=a[0], b=notsel, out=w00);
	And(a=b[0], b=sel, out=w01);
	Or(a=w00, b=w01, out=out[0]);

	And(a=a[1], b=notsel, out=w10);
	And(a=b[1], b=sel, out=w11);
	Or(a=w10, b=w11, out=out[1]);

	And(a=a[2], b=notsel, out=w20);
	And(a=b[2], b=sel, out=w21);
	Or(a=w20, b=w21, out=out[2]);

	And(a=a[3], b=notsel, out=w30);
	And(a=b[3], b=sel, out=w31);
	Or(a=w30, b=w31, out=out[3]);

	And(a=a[4], b=notsel, out=w40);
	And(a=b[4], b=sel, out=w41);
	Or(a=w40, b=w41, out=out[4]);

	And(a=a[5], b=notsel, out=w50);
	And(a=b[5], b=sel, out=w51);
	Or(a=w50, b=w51, out=out[5]);

	And(a=a[6], b=notsel, out=w60);
	And(a=b[6], b=sel, out=w61);
	Or(a=w60, b=w61, out=out[6]);

	And(a=a[7], b=notsel, out=w70);
	And(a=b[7], b=sel, out=w71);
	Or(a=w70, b=w71, out=out[7]);

	And(a=a[8], b=notsel, out=w80);
	And(a=b[8], b=sel, out=w81);
	Or(a=w80, b=w81, out=out[8]);

	And(a=a[9], b=notsel, out=w90);
	And(a=b[9], b=sel, out=w91);
	Or(a=w90, b=w91, out=out[9]);

	And(a=a[10], b=notsel, out=w100);
	And(a=b[10], b=sel, out=w101);
	Or(a=w100, b=w101, out=out[10]);

	And(a=a[11], b=notsel, out=w110);
	And(a=b[11], b=sel, out=w111);
	Or(a=w110, b=w111, out=out[11]);

	And(a=a[12], b=notsel, out=w120);
	And(a=b[12], b=sel, out=w121);
	Or(a=w120, b=w121, out=out[12]);


	And(a=a[13], b=notsel, out=w130);
	And(a=b[13], b=sel, out=w131);
	Or(a=w130, b=w131, out=out[13]);


	And(a=a[14], b=notsel, out=w140);
	And(a=b[14], b=sel, out=w141);
	Or(a=w140, b=w141, out=out[14]);


	And(a=a[15], b=notsel, out=w150);
	And(a=b[15], b=sel, out=w151);
	Or(a=w150, b=w151, out=out[15]);

}
